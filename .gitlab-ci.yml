default:
  image: gitlab.virtualcitysystems.de:5050/vcsuite/devops/gitlabrunner/node:20-bullseye

variables:
  GIT_CLONE_PATH: $CI_BUILDS_DIR/$CI_PROJECT_PATH_SLUG/$CI_COMMIT_REF_SLUG

stages:
  - build
  - test
  - bundle
  - version
  - deploy
  - deployCluster
  - publish
  - docs

.template: &job_definition
  only:
    - /^(feature-.*|hotfix-.*|main|release-.*)$/
  tags:
    - linux-2.0

build:
  <<: *job_definition
  script:
    - npm set registry 'http://npmregistry:4873'
    - npm ci
  before_script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_RUNNER_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan gitlab.virtualcitysystems.de >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - git config user.name "Gitlab Runner"
    - git config user.email "gitlab-runner@vc.systems"
  stage: build

.after_build_template: &after_build_definition
  <<: *job_definition
  variables:
    GIT_STRATEGY: none

lint:
  <<: *after_build_definition
  stage: test
  script:
    - npm run lint

type-check:
  <<: *after_build_definition
  stage: test
  script:
    - npm run build-types

test:
  <<: *after_build_definition
  stage: test
  script:
    - npm run coverage:gitlab
  coverage: '/^Statements\s*:\s*([^%]+)/'
  artifacts:
    reports:
      junit: test-report.xml

audit:
  <<: *after_build_definition
  stage: test
  script:
    - npm audit --production --audit-level=low

bundle:
  <<: *after_build_definition
  stage: bundle
  before_script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_RUNNER_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan gitlab.virtualcitysystems.de >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - git config user.name "Gitlab Runner"
    - git config user.email "gitlab-runner@vc.systems"
  script:
    - npm set registry 'http://npmregistry:4873'
    - cd plugins
    - npm i --omit peer --no-package-lock --force
    - cd ..
    - npm run build
    - npm run build-preview
    - npm run story:build

version:
  <<: *after_build_definition
  stage: version
  only:
    variables:
      - $PUBLISH
    refs:
      - /^(main|release-v.*)$/
  script:
    - LEVEL=$([ $CI_COMMIT_REF_NAME == "main" ] && echo "prerelease" || echo "patch")
    - npm version $LEVEL -m "%s [skip-ci]"
    - TAG=`git describe --abbrev=0`
    - git push git@gitlab:vcsuite/npm/vcmap/ui.git $TAG
    - git push git@gitlab:vcsuite/npm/vcmap/ui.git HEAD:$CI_COMMIT_REF_NAME
  before_script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_RUNNER_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan gitlab >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - git config user.name "Gitlab Runner"
    - git config user.email "gitlab-runner@vc.systems"

deployStaging:
  <<: *after_build_definition
  stage: deploy
  environment:
    name: staging/$CI_COMMIT_REF_SLUG
    url: http://$CI_PROJECT_PATH_SLUG-$CI_COMMIT_REF_SLUG.stagingcluster.intern.virtualcitysystems.de
    on_stop: stopEnvironment
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: ['']
  script:
    - mv .histoire/dist dist/story
    - /kaniko/executor --context dist/ --dockerfile build/staging/Dockerfile --destination $CI_REGISTRY_IMAGE/staging:$CI_COMMIT_REF_SLUG
  before_script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json

stopEnvironment:
  stage: deploy
  variables:
    GIT_STRATEGY: none
  image:
    name: bitnami/kubectl:latest
    entrypoint: ['']
  tags:
    - linux-2.0
  script:
    - echo "Stop environment staging/$CI_COMMIT_REF_NAME"
    - echo "Delete namespace on k9s $CI_PROJECT_PATH_SLUG-$CI_COMMIT_REF_SLUG"
    - kubectl config use-context vcsuite/cluster-management:agent
    - kubectl delete namespace $CI_PROJECT_PATH_SLUG-$CI_COMMIT_REF_SLUG
  when: manual
  environment:
    name: staging/$CI_COMMIT_REF_SLUG
    action: stop

deployStagingCluster:
  stage: deployCluster
  inherit:
    variables: false
  variables:
    STAGE_BRANCH: $CI_COMMIT_REF_SLUG
    STAGE_PROJECT_NAME: $CI_PROJECT_PATH_SLUG
    STAGE_REGISTRY_IMAGE: $CI_REGISTRY_IMAGE
    STAGE_NAMESPACE: $CI_PROJECT_PATH_SLUG-$CI_COMMIT_REF_SLUG
  trigger:
    project: vcsuite/devops/manifests
    branch: main

deployNew:
  <<: *after_build_definition
  stage: publish
  only:
    variables:
      - $DEPLOY
  script:
    - npm i -D @vcsuite/publishtox --registry http://npmregistry:4873
    - echo "{\"modules\":[\"config/www.config.json\"]}" > ./dist/app.config.json
    - node_modules/.bin/publishToX sftp --prefix /map/virtualcitymap.de/dev hostingsftp.virtualcitypublisher.de --cores 4 -s ./dist -d .

publish:
  <<: *after_build_definition
  stage: publish
  only:
    refs:
      - /^(main|release-v.*)$/
    variables:
      - $PUBLISH
  script:
    - npm config set '//registry.npmjs.org/:_authToken' "${NPM_TOKEN}"
    - NPM_TAG=$([ $CI_COMMIT_REF_NAME == "main" ] && echo "dev" || echo "latest")
    - npm publish --registry https://registry.npmjs.org --access public --tag $NPM_TAG
    - VERSION=$(node -pe "require('./package.json').version")
    - npm pack
    - npm run bundle
    - tar -tf vcmap-ui-*.tgz | sed s/package/./ | zip -@ vcmap-ui.zip
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file vcmap-ui.zip "${CI_API_V4_URL}/projects/317/packages/generic/VCMapUI/${VERSION}/vcmap-ui-${VERSION}.zip"'
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file dist/vcmap-bundle.tar.gz "${CI_API_V4_URL}/projects/317/packages/generic/VCMapUI/${VERSION}/vcmap-bundle-${VERSION}.tar.gz"'

deployDocs:
  <<: *after_build_definition
  stage: docs
  only:
    variables:
      - $PUBLISH
    refs:
      - /^(main|release-v.*)$/
  script:
    - VERSION=$(node -pe "const version = require('./package.json').version; /\d*\.\d*/.exec(version)[0]")
    - HISTOIRE_DEPLOYMENT="/ui/${VERSION}/story/"
    - npm run story:build
    - npm i -D @vcsuite/publishtox --registry http://npmregistry:4873
    - echo "Uploading documentation to /lib/ui/${VERSION}/story"

    - node_modules/.bin/publishToX sftp --prefix /map/virtualcitymap.de/lib/ui/ hostingsftp.virtualcitypublisher.de --cores 4 -s ./.histoire/dist -d "${VERSION}/story/"
